name: Go Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build_binaries:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude: # Go doesn't support windows/arm64 natively
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build and create archive
        run: |
          BUILD_DIR=".build/${{ matrix.goos }}-${{ matrix.goarch }}"
          BIN_NAME="go-api-scheduler"
          ARCHIVE_NAME="go-api-scheduler-${{ matrix.goos }}-${{ matrix.goarch }}"
          
          mkdir -p ${BUILD_DIR}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${BUILD_DIR}/${BIN_NAME} ./cmd/api-scheduler
          
          if [ "${{ matrix.goos }}" == "windows" ]; then
            zip -r ${ARCHIVE_NAME}.zip ${BUILD_DIR}
            echo "ARCHIVE_PATH=${ARCHIVE_NAME}.zip" >> $GITHUB_ENV
          else
            tar -czvf ${ARCHIVE_NAME}.tar.gz ${BUILD_DIR}
            echo "ARCHIVE_PATH=${ARCHIVE_NAME}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_PATH }}
          path: ${{ env.ARCHIVE_PATH }}
          
  create_release:
    name: Create GitHub Release
    needs: build_binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: .release_artifacts

      - name: Generate Release Notes
        id: changelog
        uses: git-chglog/git-chglog@v1.4.0
        with:
          config_file: '.github/chglog/config.yml'
          tag_name: ${{ github.ref_name }}
          output: 'CHANGELOG.md'
      
      - name: Read generated Changelog
        id: read_changelog
        run: |
          CHANGELOG_BODY=$(cat CHANGELOG.md)
          echo "CHANGELOG_BODY<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: ${{ env.CHANGELOG_BODY }}
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: .release_artifacts/**/*
